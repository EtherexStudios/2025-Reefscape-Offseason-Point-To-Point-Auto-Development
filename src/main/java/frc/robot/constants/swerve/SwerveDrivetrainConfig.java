package frc.robot.constants.swerve;

import edu.wpi.first.math.geometry.Translation2d;

public class SwerveDrivetrainConfig {
    public final double kMAX_DRIVETRAIN_TRANSLATIONAL_VELOCITY_METERS_PER_SEC;
    public final double kMAX_DRIVETRAIN_TRANSLATIONAL_ACCELERATION_METERS_PER_SEC_SEC;

    public final double kMAX_DRIVETRAIN_ANGULAR_VELOCITY_RADIANS_PER_SEC;
    public final double kMAX_DRIVETRAIN_ANGULAR_ACCELERATION_RADIANS_PER_SEC_SEC;

    // x, y from center of the robot
    public final Translation2d kFRONT_RIGHT_POSITION_METERS;
    public final Translation2d kBACK_RIGHT_POSITION_METERS;
    public final Translation2d kFRONT_LEFT_POSITION_METERS;
    public final Translation2d kBACK_LEFT_POSITION_METERS;

    public final double kROTATION_COMPENSATION_COEFFICIENT;

    public SwerveDrivetrainConfig(
        double kMAX_DRIVETRAIN_TRANSLATIONAL_VELOCITY_METERS_PER_SEC,
        double kMAX_DRIVETRAIN_TRANSLATIONAL_ACCELERATION_METERS_PER_SEC_SEC,
        double kMAX_DRIVETRAIN_ANGULAR_VELOCITY_RADIANS_PER_SEC,
        double kMAX_DRIVETRAIN_ANGULAR_ACCELERATION_RADIANS_PER_SEC_SEC,
        Translation2d kFRONT_LEFT_POSITION_METERS,
        Translation2d kFRONT_RIGHT_POSITION_METERS,
        Translation2d kBACK_LEFT_POSITION_METERS,
        Translation2d kBACK_RIGHT_POSITION_METERS,
        double kRotationCompensationCoefficient
    ) {
        this.kMAX_DRIVETRAIN_TRANSLATIONAL_VELOCITY_METERS_PER_SEC = kMAX_DRIVETRAIN_TRANSLATIONAL_VELOCITY_METERS_PER_SEC;
        this.kMAX_DRIVETRAIN_TRANSLATIONAL_ACCELERATION_METERS_PER_SEC_SEC = kMAX_DRIVETRAIN_TRANSLATIONAL_ACCELERATION_METERS_PER_SEC_SEC;
        
        this.kMAX_DRIVETRAIN_ANGULAR_VELOCITY_RADIANS_PER_SEC = kMAX_DRIVETRAIN_ANGULAR_VELOCITY_RADIANS_PER_SEC;
        this.kMAX_DRIVETRAIN_ANGULAR_ACCELERATION_RADIANS_PER_SEC_SEC = kMAX_DRIVETRAIN_ANGULAR_ACCELERATION_RADIANS_PER_SEC_SEC;

        this.kFRONT_LEFT_POSITION_METERS = kFRONT_LEFT_POSITION_METERS;
        this.kFRONT_RIGHT_POSITION_METERS = kFRONT_RIGHT_POSITION_METERS;
        this.kBACK_LEFT_POSITION_METERS = kBACK_LEFT_POSITION_METERS;
        this.kBACK_RIGHT_POSITION_METERS = kBACK_RIGHT_POSITION_METERS;

        this.kROTATION_COMPENSATION_COEFFICIENT = kRotationCompensationCoefficient;
    }
}
